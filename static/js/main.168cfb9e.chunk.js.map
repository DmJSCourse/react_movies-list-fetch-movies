{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovieInfo","movieTitle","a","fetch","movieInfo","json","FindMovie","addMovie","useState","setMovieInfo","titleError","setTitleError","titleSearched","setTitleSearched","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","then","data","Title","Plot","Poster","imdbID","App","state","find","element","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.168cfb9e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const URL = 'http://www.omdbapi.com/?apikey=e6b7e90f';\n\nexport const getMovieInfo = async(movieTitle) => {\n  const movieInfo = await fetch(`${URL}&t=${movieTitle}`);\n\n  return movieInfo.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport movies from '../../api/movies.json';\nimport { getMovieInfo } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const [titleError, setTitleError] = useState(false);\n  const [titleSearched, setTitleSearched] = useState('');\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={titleSearched}\n              onChange={(event) => {\n                setTitleSearched(event.target.value);\n                setTitleError(false);\n              }}\n            />\n          </div>\n          {titleError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                setMovieInfo({});\n                getMovieInfo(titleSearched)\n                  .then((data) => {\n                    setMovieInfo(data);\n                    if (!data.Title) {\n                      setTitleError(true);\n                    }\n                  });\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(movieInfo);\n                setTitleSearched('');\n                setTitleError(false);\n                setMovieInfo({});\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {\n        movieInfo.Title && (\n          <div className=\"container\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard\n              title={movieInfo.Title}\n              description={movieInfo.Plot}\n              imgUrl={movieInfo.Poster}\n              imdbUrl={`https://www.imdb.com/title/${movieInfo.imdbID}`}\n            />\n          </div>\n        )\n      }\n    </>\n  );\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    if (this.state.movies.find(element => element.imdbId === movie.imdbID)) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      movies: [...prevState.movies,\n        {\n          title: movie.Title,\n          description: movie.Plot,\n          imgUrl: movie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n          imdbId: movie.imdbID,\n        }],\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}